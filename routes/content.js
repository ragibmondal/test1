function _0x2be2() { const _0x16e2d5 = ['word_limit', 'data', 'started\x20for:\x20', '../config/config', 'randomstring', '315435HGfcuY', 'createCompletion', 'lang', 'bcrypt', '\x27\x20WHERE\x20uid\x20=\x20\x27', 'split', 'text-ada-001', 'Request\x20has\x20been\x20generated,\x20Check\x20output\x20in\x20the\x20history\x20after\x20few\x20moments.', '../middlewares/user', 'Content\x20was\x20deleted', 'log', '../config/promisemysql', '360024crLovX', '605916oklaIQ', '/gen_new_chat', '155601IFmWmF', 'decode', 'response', 'email', 'case_words', 'json', 'text-babbage-001', '63770BRchvL', 'text-davinci-003', 'query', 'post', '7271580nRaDSG', 'length', 'exports', 'text-curie-001', 'DELETE\x20from\x20content\x20WHERE\x20id\x20=\x20\x27', 'message', 'Router', 'body', '9CbSlRc', 'openai', '68792wnjlNi', 'openai_key', 'bot_power', '44MOsmFN', '21knHasK', 'moment', 'plan', 'uid', '/get_user_content', 'SELECT\x20*\x20FROM\x20content\x20WHERE\x20uid\x20=\x20\x27', 'get', '/del_one', 'success', 'english', 'error']; _0x2be2 = function () { return _0x16e2d5; }; return _0x2be2(); } function _0x5ad1(_0x5bb67a, _0x22a771) { const _0x2be27d = _0x2be2(); return _0x5ad1 = function (_0x5ad1ca, _0x3713d7) { _0x5ad1ca = _0x5ad1ca - 0x142; let _0xb99724 = _0x2be27d[_0x5ad1ca]; return _0xb99724; }, _0x5ad1(_0x5bb67a, _0x22a771); } const _0x34bd35 = _0x5ad1; (function (_0x5a0fb8, _0xde8ddd) { const _0x1dd3ba = _0x5ad1, _0x2e3bb6 = _0x5a0fb8(); while (!![]) { try { const _0x2ed9d9 = -parseInt(_0x1dd3ba(0x153)) / 0x1 + -parseInt(_0x1dd3ba(0x160)) / 0x2 + parseInt(_0x1dd3ba(0x162)) / 0x3 + parseInt(_0x1dd3ba(0x142)) / 0x4 * (-parseInt(_0x1dd3ba(0x169)) / 0x5) + parseInt(_0x1dd3ba(0x15f)) / 0x6 * (parseInt(_0x1dd3ba(0x143)) / 0x7) + parseInt(_0x1dd3ba(0x177)) / 0x8 * (-parseInt(_0x1dd3ba(0x175)) / 0x9) + parseInt(_0x1dd3ba(0x16d)) / 0xa; if (_0x2ed9d9 === _0xde8ddd) break; else _0x2e3bb6['push'](_0x2e3bb6['shift']()); } catch (_0x334460) { _0x2e3bb6['push'](_0x2e3bb6['shift']()); } } }(_0x2be2, 0x2ed07)); const router = require('express')[_0x34bd35(0x173)](), con = require(_0x34bd35(0x151)), { sign } = require('jsonwebtoken'), bcrypt = require(_0x34bd35(0x156)), randomstring = require(_0x34bd35(0x152)), moment = require(_0x34bd35(0x144)), { isvalid, isvaliddownload, isuser, checkhit } = require(_0x34bd35(0x15b)), path = require('path'), fs = require('fs'), { Configuration, OpenAIApi } = require(_0x34bd35(0x176)), promisemysql = require(_0x34bd35(0x15e)), botpower = [_0x34bd35(0x159), 'text-ada-001', _0x34bd35(0x168), _0x34bd35(0x170), 'text-davinci-003']; router[_0x34bd35(0x16c)](_0x34bd35(0x161), isuser, checkhit, async (_0x2d922b, _0x207cda) => { const _0x24e788 = _0x34bd35; try { const _0x1044ff = botpower[_0x2d922b[_0x24e788(0x145)][_0x24e788(0x179)]], _0x47923f = _0x2d922b[_0x24e788(0x174)][_0x24e788(0x166)], _0x2d0bde = _0x2d922b[_0x24e788(0x174)][_0x24e788(0x155)], _0x5a6d28 = _0x2d922b[_0x24e788(0x145)], _0x257838 = new Configuration({ 'apiKey': _0x2d922b[_0x24e788(0x178)] }), _0x48f22f = new OpenAIApi(_0x257838); console['log'](_0x2d0bde); const _0x15eeb6 = '\x22' + _0x47923f + '\x22\x20reply\x20in\x20' + (_0x2d0bde || _0x24e788(0x14c)) + '\x20language'; console[_0x24e788(0x15d)](_0x24e788(0x150), _0x2d922b[_0x24e788(0x163)][_0x24e788(0x165)]), console[_0x24e788(0x15d)](_0x1044ff), console[_0x24e788(0x15d)](_0x5a6d28[_0x24e788(0x14e)]); const _0x2c82cf = await _0x48f22f[_0x24e788(0x154)]({ 'model': _0x1044ff, 'prompt': '' + _0x15eeb6, 'temperature': 0.2, 'max_tokens': _0x1044ff === _0x24e788(0x159) && _0x5a6d28[_0x24e788(0x14e)] > 0x7d0 ? 0x7d0 : _0x5a6d28[_0x24e788(0x14e)] || _0x1044ff === _0x24e788(0x168) && _0x5a6d28[_0x24e788(0x14e)] > 0x7d0 ? 0x7d0 : _0x5a6d28[_0x24e788(0x14e)] || _0x1044ff === _0x24e788(0x170) && _0x5a6d28[_0x24e788(0x14e)] > 0x7d0 ? 0x7d0 : _0x5a6d28['word_limit'] || _0x1044ff === _0x24e788(0x16a) && _0x5a6d28[_0x24e788(0x14e)] > 0xbb8 ? 0xbb8 : _0x5a6d28[_0x24e788(0x14e)], 'top_p': 0x1, 'frequency_penalty': 0x0, 'presence_penalty': 0x0 }); _0x207cda[_0x24e788(0x167)]({ 'msg': _0x24e788(0x15a), 'success': !![] }); const _0x5a167f = _0x2c82cf['data']['choices'][0x0]['text'], _0x146689 = _0x2d922b['word_left'] - _0x5a167f?.[_0x24e788(0x158)]('\x20')[_0x24e788(0x16e)]; await promisemysql[_0x24e788(0x16b)]('UPDATE\x20user\x20SET\x20word_left\x20=\x20\x27' + _0x146689 + _0x24e788(0x157) + _0x2d922b[_0x24e788(0x163)][_0x24e788(0x146)] + '\x27\x20'); const _0x378b5d = [_0x2d922b[_0x24e788(0x163)][_0x24e788(0x146)], _0x47923f, _0x1044ff, _0x2d0bde, _0x5a167f, _0x24e788(0x14b)]; var _0x13eff6 = 'INSERT\x20INTO\x20content\x20(uid,\x20case_words,\x20level,\x20language,\x20content,\x20status)\x20VALUES\x20(\x20?,?,\x20?,?,?,?\x20)'; con[_0x24e788(0x16b)](_0x13eff6, _0x378b5d, _0x3820a8 => { _0x3820a8 && console['log'](_0x3820a8); }), console[_0x24e788(0x15d)]('added\x20for:\x20', _0x2d922b[_0x24e788(0x163)][_0x24e788(0x165)]); } catch (_0x4e2ba4) { console['log'](_0x4e2ba4['response']), _0x207cda[_0x24e788(0x167)]({ 'msg': _0x4e2ba4[_0x24e788(0x164)][_0x24e788(0x14f)][_0x24e788(0x14d)][_0x24e788(0x172)] }); } }), router[_0x34bd35(0x149)](_0x34bd35(0x147), isuser, async (_0x479070, _0x5b5164) => { const _0x412d7e = _0x34bd35; try { const _0x3e6d31 = await promisemysql[_0x412d7e(0x16b)](_0x412d7e(0x148) + _0x479070[_0x412d7e(0x163)][_0x412d7e(0x146)] + '\x27'); _0x5b5164[_0x412d7e(0x167)]({ 'success': !![], 'data': _0x3e6d31 }); } catch (_0x388005) { console[_0x412d7e(0x15d)](_0x388005), _0x5b5164[_0x412d7e(0x167)]({ 'msg': 'Server\x20error', 'err': _0x388005 }); } }), router['post'](_0x34bd35(0x14a), isuser, async (_0x342879, _0x1f252d) => { const _0xe66293 = _0x34bd35; try { const _0x1d9955 = await promisemysql[_0xe66293(0x16b)](_0xe66293(0x171) + _0x342879[_0xe66293(0x174)]['id'] + '\x27\x20'); _0x1f252d[_0xe66293(0x167)]({ 'msg': _0xe66293(0x15c), 'success': !![] }); } catch (_0x5491cc) { console['log'](_0x5491cc), _0x1f252d[_0xe66293(0x167)]({ 'msg': 'Server\x20error', 'err': _0x5491cc }); } }), module[_0x34bd35(0x16f)] = router;