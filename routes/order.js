function _0x6091() { const _0xe11511 = ['5kTmwDW', '/get_all_orders_admin', 'UPDATE\x20user\x20SET\x20plan\x20=\x20\x27', 'bcrypt', 'base64', 'paypal_client_secret', 'log', 'Basic\x20', 'from', 'Bearer\x20', '\x27,\x20hit_left\x20=\x20\x27', 'body', 'express', '../config/config', 'Razorpay', './order/orderfun', 'binary', 'Logs\x20was\x20cleared', '../middlewares/user', 'SELECT\x20*\x20FROM\x20orders', '\x27,\x20\x27', 'query', 'plan', 'dall_e_limit', 'add', 'rz_key', '9452400fEcqZB', 'time_period', '3562584INtdBh', 'https://api-m.sandbox.paypal.com/v1/oauth2/token', 'cost', 'days', 'Congo!', 'hit_limit', 'getweb', 'length', '202528PWQUbB', 'DELETE\x20FROM\x20orders', 'node-fetch', 'json', 'post', 'Db\x20query\x20error', 'randomstring', 'moment', 'exports', 'Something\x20went\x20wrong\x20with\x20yout\x20payment.\x20Please\x20try\x20again\x20or\x20contact\x20support\x20if\x20your\x20payment\x20deducted', 'Router', '27ilPoWq', 'exchange_rate', 'INR', 'now', '9875369rdjDOR', '\x27,\x20dall_e_hit_left=\x20\x27NULL\x27\x20WHERE\x20uid\x20=\x20\x27', '\x27,\x20dall_e_hit_left\x20=\x20\x27', 'rz_payment_id', '\x27,\x20dall_e_hit_left=\x20\x270\x27\x20WHERE\x20uid\x20=\x20\x27', 'toString', 'Paypal', '9180vHnLWe', 'get', 'status', 'Server\x20error', 'uid', '/clear_all_log', 'decode', 'dall_e', 'success', '2262TJlyxp', 'INSERT\x20INTO\x20orders\x20(user_data,\x20transaction,\x20order_type)\x20VALUES\x20(\x27', 'round', '\x27\x20WHERE\x20uid\x20=\x20\x27', 'stringify', 'rz_id', '6241155FnuuHK', '4074190oBifKY']; _0x6091 = function () { return _0xe11511; }; return _0x6091(); } const _0x20745a = _0x1f2a; function _0x1f2a(_0x35098c, _0x2ebbca) { const _0x609178 = _0x6091(); return _0x1f2a = function (_0x1f2a9d, _0x3e839d) { _0x1f2a9d = _0x1f2a9d - 0x1e6; let _0x5150cd = _0x609178[_0x1f2a9d]; return _0x5150cd; }, _0x1f2a(_0x35098c, _0x2ebbca); } (function (_0x4f3407, _0x29b77e) { const _0x2806f4 = _0x1f2a, _0x82dc47 = _0x4f3407(); while (!![]) { try { const _0x1f1b60 = -parseInt(_0x2806f4(0x1e7)) / 0x1 * (parseInt(_0x2806f4(0x20b)) / 0x2) + -parseInt(_0x2806f4(0x22a)) / 0x3 * (parseInt(_0x2806f4(0x221)) / 0x4) + parseInt(_0x2806f4(0x230)) / 0x5 + parseInt(_0x2806f4(0x203)) / 0x6 + parseInt(_0x2806f4(0x21a)) / 0x7 + parseInt(_0x2806f4(0x201)) / 0x8 + -parseInt(_0x2806f4(0x216)) / 0x9 * (parseInt(_0x2806f4(0x1e6)) / 0xa); if (_0x1f1b60 === _0x29b77e) break; else _0x82dc47['push'](_0x82dc47['shift']()); } catch (_0x2e20a7) { _0x82dc47['push'](_0x82dc47['shift']()); } } }(_0x6091, 0xee1c9)); const router = require(_0x20745a(0x1f3))[_0x20745a(0x215)](), con = require(_0x20745a(0x1f4)), bcrypt = require(_0x20745a(0x1ea)), { isuser, isvalid } = require(_0x20745a(0x1f9)), moment = require(_0x20745a(0x212)), fetch = require(_0x20745a(0x20d)), orderfun = require(_0x20745a(0x1f6)), Razorpay = require('razorpay'), randomstring = require(_0x20745a(0x211)), promisemysql = require('../config/promisemysql'); router[_0x20745a(0x20f)]('/pay_with_rz', isuser, async (_0x41f359, _0x38225b) => { const _0x3f12ed = _0x20745a; try { const _0x117513 = _0x41f359[_0x3f12ed(0x1f2)][_0x3f12ed(0x1fd)], _0x2d6ab9 = await orderfun[_0x3f12ed(0x209)](), _0x534a84 = new Date(), _0x1326af = moment(_0x534a84)[_0x3f12ed(0x1ff)](_0x117513['time_period'], _0x3f12ed(0x206)); var _0x4d8e9c = new Razorpay({ 'key_id': _0x2d6ab9[_0x3f12ed(0x22f)], 'key_secret': _0x2d6ab9[_0x3f12ed(0x200)] }); const _0xb1052d = parseInt(_0x41f359[_0x3f12ed(0x1f2)]['amount']) / parseInt(_0x2d6ab9[_0x3f12ed(0x217)]) * 0x50, _0x8377eb = await _0x4d8e9c['payments']['capture'](_0x41f359[_0x3f12ed(0x1f2)][_0x3f12ed(0x21d)], Math[_0x3f12ed(0x22c)](_0xb1052d) * 0x64, _0x3f12ed(0x218)); if (!_0x8377eb) { _0x38225b[_0x3f12ed(0x20e)]({ 'success': ![], 'msg': 'Something\x20went\x20wrong,\x20Try\x20again' }); return; } const _0x4a8bda = parseInt(_0x117513['dall_e']) > 0x0 ? _0x117513['dall_e_limit'] : ![], _0x125e38 = parseInt(_0x117513[_0x3f12ed(0x208)]); if (_0x4a8bda) { const _0x2f6f22 = await promisemysql[_0x3f12ed(0x1fc)]('UPDATE\x20user\x20SET\x20plan\x20=\x20\x27' + JSON[_0x3f12ed(0x22e)](_0x117513) + _0x3f12ed(0x21c) + _0x117513[_0x3f12ed(0x1fe)] + _0x3f12ed(0x1f1) + _0x125e38 + _0x3f12ed(0x22d) + _0x41f359['decode'][_0x3f12ed(0x225)] + '\x27\x20'); } else { const _0x35478c = await promisemysql[_0x3f12ed(0x1fc)](_0x3f12ed(0x1e9) + JSON[_0x3f12ed(0x22e)](_0x117513) + _0x3f12ed(0x1f1) + _0x125e38 + _0x3f12ed(0x21b) + _0x41f359[_0x3f12ed(0x227)]['uid'] + '\x27\x20'); } await orderfun['ordergen']({ 'req': _0x41f359, 'msgg': _0x8377eb, 'type': _0x3f12ed(0x1f5) }), _0x38225b[_0x3f12ed(0x20e)]({ 'success': !![], 'msg': _0x3f12ed(0x207) }); } catch (_0x155267) { console[_0x3f12ed(0x1ed)](_0x155267), _0x38225b[_0x3f12ed(0x20e)]({ 'msg': _0x3f12ed(0x224), 'err': _0x155267 }); } }), router[_0x20745a(0x20f)]('/free_plan', isuser, async (_0x268b2f, _0x5e731e) => { const _0x3eade7 = _0x20745a; try { const _0x1495a2 = await promisemysql[_0x3eade7(0x1fc)]('SELECT\x20*\x20FROM\x20plan\x20WHERE\x20id\x20=\x20\x27' + _0x268b2f[_0x3eade7(0x1f2)][_0x3eade7(0x1fd)]['id'] + '\x27\x20'); if (_0x1495a2[_0x3eade7(0x20a)] < 0x1) return _0x5e731e[_0x3eade7(0x20e)]({ 'msg': 'Invalid\x20plan' }); var _0x3990f1 = _0x1495a2[0x0]; const _0x49620e = parseInt(_0x3990f1[_0x3eade7(0x228)]) > 0x0 ? _0x3990f1[_0x3eade7(0x1fe)] : ![], _0x4b3c70 = parseInt(_0x3990f1['hit_limit']); if (_0x49620e) { const _0x23dbee = await promisemysql[_0x3eade7(0x1fc)](_0x3eade7(0x1e9) + JSON['stringify'](_0x3990f1) + _0x3eade7(0x21c) + _0x3990f1[_0x3eade7(0x1fe)] + _0x3eade7(0x1f1) + _0x4b3c70 + _0x3eade7(0x22d) + _0x268b2f[_0x3eade7(0x227)][_0x3eade7(0x225)] + '\x27\x20'); } else { const _0x465e5d = await promisemysql[_0x3eade7(0x1fc)](_0x3eade7(0x1e9) + JSON[_0x3eade7(0x22e)](_0x3990f1) + _0x3eade7(0x1f1) + _0x4b3c70 + _0x3eade7(0x21e) + _0x268b2f[_0x3eade7(0x227)][_0x3eade7(0x225)] + '\x27\x20'); } var _0x386bf8 = { 'status': _0x3eade7(0x229), 'type': 'Free', 'id': Date[_0x3eade7(0x219)](), 'amount': _0x3990f1[_0x3eade7(0x205)] }, _0x272a4d = 'Free', _0x56e8f2 = _0x3eade7(0x22b) + JSON[_0x3eade7(0x22e)](_0x268b2f[_0x3eade7(0x227)]) + '\x27,\x20\x27' + JSON[_0x3eade7(0x22e)](_0x386bf8) + _0x3eade7(0x1fb) + _0x272a4d + '\x27)\x20'; const _0x29bfe6 = await promisemysql[_0x3eade7(0x1fc)](_0x56e8f2); _0x5e731e[_0x3eade7(0x20e)]({ 'success': !![], 'msg': 'Congo!' }); } catch (_0x4fb974) { console['log'](_0x4fb974), _0x5e731e['json']({ 'msg': _0x3eade7(0x224), 'err': _0x4fb974 }); } }), router['post']('/paypal_with_paypal', isuser, async (_0x24928b, _0x1484cf) => { const _0x3a0a8b = _0x20745a; try { var _0x31b503 = _0x24928b[_0x3a0a8b(0x1f2)]['order_id']; const _0x522cbb = _0x24928b[_0x3a0a8b(0x1f2)][_0x3a0a8b(0x1fd)]; if (!_0x31b503 || !_0x522cbb) return _0x1484cf[_0x3a0a8b(0x20e)]({ 'msg': 'Order\x20id\x20and\x20plan\x20required' }); const _0x32b2a0 = new Date(), _0x1957a3 = moment(_0x32b2a0)[_0x3a0a8b(0x1ff)](_0x522cbb[_0x3a0a8b(0x202)], 'days'), _0x2abe15 = await orderfun['getweb'](); let _0x3d8f07 = _0x2abe15['paypal_client_id'], _0x4b1a4f = _0x2abe15[_0x3a0a8b(0x1ec)], _0x135b50 = await fetch(_0x3a0a8b(0x204), { 'method': 'POST', 'body': 'grant_type=client_credentials', 'headers': { 'Authorization': _0x3a0a8b(0x1ee) + Buffer[_0x3a0a8b(0x1ef)](_0x3d8f07 + ':' + _0x4b1a4f, _0x3a0a8b(0x1f7))[_0x3a0a8b(0x21f)](_0x3a0a8b(0x1eb)) } }), _0x5b2a36 = await _0x135b50[_0x3a0a8b(0x20e)](), _0x564c92 = await fetch('https://api-m.sandbox.paypal.com/v1/checkout/orders/' + _0x31b503, { 'method': 'GET', 'headers': { 'Authorization': _0x3a0a8b(0x1f0) + _0x5b2a36['access_token'] } }), _0x31cacb = await _0x564c92[_0x3a0a8b(0x20e)](); if (!_0x31cacb[_0x3a0a8b(0x223)] === 'COMPLETED') { _0x1484cf[_0x3a0a8b(0x20e)]({ 'success': ![], 'msg': _0x3a0a8b(0x214) }); return; } const _0x172ba = parseInt(_0x522cbb[_0x3a0a8b(0x228)]) > 0x0 ? _0x522cbb[_0x3a0a8b(0x1fe)] : ![], _0x53ebfc = parseInt(_0x522cbb['hit_limit']); _0x172ba ? await promisemysql['query'](_0x3a0a8b(0x1e9) + JSON[_0x3a0a8b(0x22e)](_0x522cbb) + _0x3a0a8b(0x21c) + _0x522cbb['dall_e_limit'] + _0x3a0a8b(0x1f1) + _0x53ebfc + '\x27\x20WHERE\x20uid\x20=\x20\x27' + _0x24928b[_0x3a0a8b(0x227)]['uid'] + '\x27\x20') : await promisemysql[_0x3a0a8b(0x1fc)](_0x3a0a8b(0x1e9) + JSON['stringify'](_0x522cbb) + '\x27,\x20hit_left\x20=\x20\x27' + _0x53ebfc + _0x3a0a8b(0x21e) + _0x24928b['decode'][_0x3a0a8b(0x225)] + '\x27\x20'); var _0x5d14e9 = _0x31cacb; await orderfun['ordergen']({ 'req': _0x24928b, 'msgg': _0x5d14e9, 'type': _0x3a0a8b(0x220) }), _0x1484cf[_0x3a0a8b(0x20e)]({ 'success': !![], 'msg': _0x3a0a8b(0x207) }); } catch (_0x22b455) { console[_0x3a0a8b(0x1ed)](_0x22b455), _0x1484cf[_0x3a0a8b(0x20e)]({ 'err': _0x22b455, 'msg': _0x3a0a8b(0x224) }); } }), router[_0x20745a(0x222)](_0x20745a(0x1e8), isvalid, (_0x375907, _0x545dac) => { const _0x3a76bb = _0x20745a; var _0x4a9749 = _0x3a76bb(0x1fa); con[_0x3a76bb(0x1fc)](_0x4a9749, (_0x5729fe, _0x268b18) => { const _0x729fb = _0x3a76bb; if (_0x5729fe) { _0x545dac['json']({ 'msg': _0x729fb(0x210) }), console['log'](_0x5729fe); return; } else _0x545dac[_0x729fb(0x20e)]({ 'success': !![], 'data': _0x268b18 }); }); }), router[_0x20745a(0x222)](_0x20745a(0x226), isvalid, async (_0x108445, _0x14b95f) => { const _0x593087 = _0x20745a; try { await promisemysql[_0x593087(0x1fc)](_0x593087(0x20c)), _0x14b95f[_0x593087(0x20e)]({ 'success': !![], 'msg': _0x593087(0x1f8) }); } catch (_0x5c5975) { console[_0x593087(0x1ed)](_0x5c5975), _0x14b95f[_0x593087(0x20e)]({ 'err': _0x5c5975, 'msg': _0x593087(0x224) }); } }), module[_0x20745a(0x213)] = router;