function _0x20a1() { const _0x2b6359 = ['SELECT\x20*\x20FROM\x20instance\x20WHERE\x20instance_number\x20=\x20\x27', 'old\x20client\x20id\x20found\x20however\x20removed.', 'lastDisconnect', '680181RUvgLt', 'concat', 'unlinkSync', 'UPDATE\x20instance\x20SET\x20instance_number\x20=\x20\x27', 'File\x20deleted!', 'output', 'EDGE', 'existsSync', 'INSERT\x20INTO\x20instance\x20(uid,\x20client_id,\x20status)\x20VALUES\x20(\x27', '/../../sessions/', 'client_id', 'body', 'info', 'instance', 'code', 'QR\x20Timeout.\x20Trying\x20again...', 'timedOut', 'Request\x20generated', '939336GIwsAK', 'pino', 'multideviceMismatch', 'log', 'query', 'error', 'creds', '86751XrvgeA', 'ran\x20again', '40KaToRg', 'Error\x20occurred\x20while\x20trying\x20to\x20remove\x20file.', '9951624SJrJUK', 'indexOf', 'Hmm.\x20coba\x20lagi...', 'FFA', 'toString', '9079rFKiWD', '4VOgNXn', 'end', 'slice', '1.0', 'unlink', '4657367hheDvG', 'File\x20doesn\x27t\x20exist,\x20won\x27t\x20remove\x20it.', 'sock\x20ended', 'uid', '\x27,\x20\x27', 'length', '.json', 'ENOENT', 'Require\x20multi-device\x20edition', '/../../sessionss/', 'DELETE\x20FROM\x20instance\x20WHERE\x20instance_number\x20=\x20\x27', 'close', '3138JKqsOb', 'sock\x20end', '381239wOWIHp', 'decode', 'payload', 'restartRequired', '5ZofVrn']; _0x20a1 = function () { return _0x2b6359; }; return _0x20a1(); } const _0xfee03d = _0x15e4; function _0x15e4(_0x19218c, _0x23a206) { const _0x20a109 = _0x20a1(); return _0x15e4 = function (_0x15e4e, _0x567432) { _0x15e4e = _0x15e4e - 0x1c0; let _0x126897 = _0x20a109[_0x15e4e]; return _0x126897; }, _0x15e4(_0x19218c, _0x23a206); } (function (_0x32b922, _0x5960b7) { const _0x50af3f = _0x15e4, _0x484160 = _0x32b922(); while (!![]) { try { const _0x8803a1 = -parseInt(_0x50af3f(0x1ca)) / 0x1 * (-parseInt(_0x50af3f(0x1f5)) / 0x2) + -parseInt(_0x50af3f(0x1d2)) / 0x3 + parseInt(_0x50af3f(0x1e4)) / 0x4 * (parseInt(_0x50af3f(0x1ce)) / 0x5) + parseInt(_0x50af3f(0x1c8)) / 0x6 * (parseInt(_0x50af3f(0x1f4)) / 0x7) + -parseInt(_0x50af3f(0x1ef)) / 0x8 + parseInt(_0x50af3f(0x1eb)) / 0x9 * (parseInt(_0x50af3f(0x1ed)) / 0xa) + parseInt(_0x50af3f(0x1fa)) / 0xb; if (_0x8803a1 === _0x5960b7) break; else _0x484160['push'](_0x484160['shift']()); } catch (_0x27f344) { _0x484160['push'](_0x484160['shift']()); } } }(_0x20a1, 0xa2d24)); const { default: makeWASocket, DisconnectReason, useSingleFileAuthState } = require('@adiwajshing/baileys'), fs = require('fs'), pino = require(_0xfee03d(0x1e5)), promisemysql = require('../../config/promisemysql'); let qr; async function instance(_0x1aa857, _0x3caf03) { const _0x3e4306 = _0xfee03d, _0x2f102e = __dirname + '/../../sessions/'; _0x3caf03['json']({ 'msg': _0x3e4306(0x1e3), 'success': !![] }), await promisemysql[_0x3e4306(0x1e8)](_0x3e4306(0x1da) + _0x1aa857[_0x3e4306(0x1cb)][_0x3e4306(0x1fd)] + _0x3e4306(0x1c0) + _0x1aa857[_0x3e4306(0x1dd)][_0x3e4306(0x1dc)] + '\x27,\x20\x27started\x27)'); fs[_0x3e4306(0x1d9)](_0x2f102e[_0x3e4306(0x1d3)](_0x1aa857[_0x3e4306(0x1dd)][_0x3e4306(0x1dc)] + '.json')) && (fs[_0x3e4306(0x1d4)](_0x2f102e[_0x3e4306(0x1d3)](_0x1aa857[_0x3e4306(0x1dd)][_0x3e4306(0x1dc)] + '.json')), console['log'](_0x3e4306(0x1d0))); async function _0x556b39(_0x31fd8c) { const _0x4cef27 = _0x3e4306; try { _0x31fd8c && console[_0x4cef27(0x1e7)](_0x4cef27(0x1ec)); const { state: _0x48a1ff, saveState: _0x1c2381 } = useSingleFileAuthState(_0x2f102e[_0x4cef27(0x1d3)](_0x1aa857[_0x4cef27(0x1dd)][_0x4cef27(0x1dc)] + _0x4cef27(0x1c2))), _0xe227f = makeWASocket({ 'printQRInTerminal': !![], 'auth': _0x48a1ff, 'logger': pino({ 'level': 'fatal' }), 'browser': [_0x4cef27(0x1f2), _0x4cef27(0x1d8), _0x4cef27(0x1f8)] }); _0xe227f['ev']['on']('connection.update', async _0x4158c1 => { const _0x5221ca = _0x4cef27, { connection: _0x45c86e } = _0x4158c1; _0x4158c1['qr'] && (console['log']('qr\x20generated\x20and\x20adding\x20to\x20database'), await promisemysql[_0x5221ca(0x1e8)]('UPDATE\x20instance\x20SET\x20qr\x20=\x20\x27' + _0x4158c1['qr'] + '\x27,\x20status\x20=\x20\x27qr\x20generated\x27\x20WHERE\x20client_id\x20=\x20\x27' + _0x1aa857[_0x5221ca(0x1dd)][_0x5221ca(0x1dc)] + '\x27\x20')); _0x45c86e == 'connecting' && console[_0x5221ca(0x1e7)]('its\x20connecting'); if (_0x45c86e == _0x5221ca(0x1c7)) { let _0x34c7ae = __dirname + _0x5221ca(0x1c5) + _0x1aa857[_0x5221ca(0x1dd)][_0x5221ca(0x1dc)] + '.json', _0x1e01ba = fs[_0x5221ca(0x1d9)](_0x34c7ae); _0x1e01ba && fs[_0x5221ca(0x1f9)](_0x34c7ae, _0x3263e2 => { const _0x5ef98c = _0x5221ca; if (_0x3263e2 && _0x3263e2[_0x5ef98c(0x1e0)] == 'ENOENT') console[_0x5ef98c(0x1de)](_0x5ef98c(0x1fb)); else _0x3263e2 && console[_0x5ef98c(0x1e9)]('Error\x20occurred\x20while\x20trying\x20to\x20remove\x20file.'); console[_0x5ef98c(0x1e7)](_0x5ef98c(0x1d6)); }); } let _0x390929 = _0x4158c1[_0x5221ca(0x1d1)]?.[_0x5221ca(0x1e9)]?.[_0x5221ca(0x1d7)]?.['statusCode'], _0x48a301 = _0x4158c1[_0x5221ca(0x1d1)]?.['error']?.['output']?.[_0x5221ca(0x1cc)]?.['message']; _0x4158c1[_0x5221ca(0x1d1)]?.['error']?.[_0x5221ca(0x1f3)]() === 'Error:\x20Unexpected\x20server\x20response:\x20400' && setTimeout(() => { _0x556b39(!![]); }, 0xbb8); { switch (_0x390929) { case DisconnectReason[_0x5221ca(0x1cd)]: _0x556b39(); break; case DisconnectReason[_0x5221ca(0x1e2)]: console['log'](_0x5221ca(0x1e1)), _0x556b39(); break; case DisconnectReason[_0x5221ca(0x1e6)]: console[_0x5221ca(0x1e7)](_0x5221ca(0x1f1)); if (_0x48a301 === _0x5221ca(0x1c4)) { _0x556b39(); break; } _0x556b39(); break; default: break; } } if (_0x4158c1['qr']) qr = _0x4158c1['qr']; else { if (qr = undefined) { } else { if (_0x4158c1['connection'] === 'open') { setTimeout(async () => { const _0x3c8cdb = _0x5221ca; try { var _0x1cb369 = await promisemysql[_0x3c8cdb(0x1e8)](_0x3c8cdb(0x1cf) + _0x48a1ff['creds']?.['me']?.['id']?.[_0x3c8cdb(0x1f7)](0x0, _0x48a1ff[_0x3c8cdb(0x1ea)]?.['me']?.['id'][_0x3c8cdb(0x1f0)](':')) + '\x27\x20'); if (_0x1cb369?.[_0x3c8cdb(0x1c1)] > 0x0) { await promisemysql[_0x3c8cdb(0x1e8)](_0x3c8cdb(0x1c6) + _0x48a1ff[_0x3c8cdb(0x1ea)]?.['me']?.['id']?.[_0x3c8cdb(0x1f7)](0x0, _0x48a1ff[_0x3c8cdb(0x1ea)]?.['me']?.['id'][_0x3c8cdb(0x1f0)](':')) + '\x27'); let _0x52b1cd = __dirname + _0x3c8cdb(0x1db) + _0x1cb369[0x0]?.['client_id'] + _0x3c8cdb(0x1c2), _0x433f23 = fs['existsSync'](_0x52b1cd); _0x433f23 && fs[_0x3c8cdb(0x1f9)](_0x52b1cd, _0x249693 => { const _0x96ba21 = _0x3c8cdb; if (_0x249693 && _0x249693['code'] == _0x96ba21(0x1c3)) console[_0x96ba21(0x1de)](_0x96ba21(0x1fb)); else _0x249693 && console[_0x96ba21(0x1e9)](_0x96ba21(0x1ee)); console[_0x96ba21(0x1e7)]('File\x20deleted!'); }); } await promisemysql[_0x3c8cdb(0x1e8)](_0x3c8cdb(0x1d5) + _0x48a1ff[_0x3c8cdb(0x1ea)]?.['me']?.['id']?.[_0x3c8cdb(0x1f7)](0x0, _0x48a1ff[_0x3c8cdb(0x1ea)]?.['me']?.['id'][_0x3c8cdb(0x1f0)](':')) + '\x27,\x20status\x20=\x20\x27ready\x20to\x20use\x27\x20WHERE\x20client_id\x20=\x20\x27' + _0x1aa857[_0x3c8cdb(0x1dd)][_0x3c8cdb(0x1dc)] + '\x27\x20'), _0xe227f[_0x3c8cdb(0x1f6)](), console[_0x3c8cdb(0x1e7)](_0x3c8cdb(0x1fc)); } catch (_0x4a84e4) { console[_0x3c8cdb(0x1e7)](_0x4a84e4); } }, 0x2710), console[_0x5221ca(0x1e7)](_0x5221ca(0x1c9)); return; } } } }), _0xe227f['ev']['on']('creds.update', _0x1c2381); } catch (_0x11bfa4) { console['log'](_0x11bfa4); } } _0x556b39(); } exports[_0xfee03d(0x1df)] = instance;